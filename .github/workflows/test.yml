name: Test
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        # choosing to run a reduced set of LTS, current, and next, to balance coverage and execution time
        java: [17]
        jvm_flags: [
          "-XX:+UseG1GC",
          "-XX:+UseStringDeduplication",
          "-Xms512m",
          "-XX:+UnlockDiagnosticVMOptions",
          "-XX:+UseAdaptiveSizePolicy"
        ]
      fail-fast: false
    name: Test JDK ${{ matrix.java }}, ${{ matrix.os }}, ${{ matrix.jvm_flag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          cache: 'maven'

      - name: Log JVM Flag
        run: |
          echo "Running with JVM flag: ${{ matrix.jvm_flag }}"

      - name: Maven Compile
        run: mvn -X compile -B --file pom.xml

      - name: Maven Verify
        run: mvn -X verify -B --file pom.xml

      - name: Get JaCoCo Coverage
        id: coverage  
        run: |
          coverage=$(python3 config/coverage.py target/site/jacoco/jacoco.csv) 
          echo "COVERAGE=$coverage" >> $GITHUB_ENV

      - name: Fail if coverage has not improved.
        run: |
          coverage=$COVERAGE
          threshold=90.41
          if (( $(echo "$coverage - $threshold <= 0.1" | bc -l) )); then
            echo "Coverage has not improved."
            exit 1
          else
            echo "New coverage: $coverage%"
          fi
